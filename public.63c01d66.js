let e,t,n,s;const o=document.getElementById("welcomeScreen");console.log("DOM Element Check: welcomeScreen",o);const l=document.getElementById("startQuizBtn");console.log("DOM Element Check: startQuizBtn",l);const i=document.getElementById("addQuestionsBtn");console.log("DOM Element Check: addQuestionsBtn",i);const a=document.getElementById("quizMode");console.log("DOM Element Check: quizModeSelect",a);const d=document.getElementById("numQuestions");console.log("DOM Element Check: numQuestionsInput",d);const c=document.getElementById("maxQuestions");console.log("DOM Element Check: maxQuestionsSpan",c);const r=document.getElementById("timeLimitGroup");console.log("DOM Element Check: timeLimitGroup",r);const u=document.getElementById("timeLimit");console.log("DOM Element Check: timeLimitInput",u);const m=document.getElementById("quizLayout");console.log("DOM Element Check: quizLayout",m);const g=document.getElementById("testContainer");console.log("DOM Element Check: testContainer",g);const h=document.getElementById("results");console.log("DOM Element Check: resultsDiv",h);const p=document.getElementById("timer");console.log("DOM Element Check: timerDisplay",p);const v=document.getElementById("prevQuestionBtn");console.log("DOM Element Check: prevQuestionBtn",v);const I=document.getElementById("nextQuestionBtn");console.log("DOM Element Check: nextQuestionBtn",I);const E=document.getElementById("resetQuizBtn");console.log("DOM Element Check: resetQuizBtn",E),console.log("DOM Element Check: questionNavPanel",document.getElementById("questionNavPanel"));const L=document.getElementById("questionBoxes");console.log("DOM Element Check: questionBoxesContainer",L);const f=document.querySelector("main");console.log("DOM Element Check: mainElement",f);let y=[],T="practice",x=10,C=30,S=0,N=[],Q={},M=!1;function q(e){e<0&&(e=0);let t=Math.floor(e/60).toString().padStart(2,"0"),n=(e%60).toString().padStart(2,"0");return`Time: ${t}:${n}`}function w(){let t=new Date(new Date-e),n=t.getMinutes().toString().padStart(2,"0"),s=t.getSeconds().toString().padStart(2,"0");p.textContent=`Time: ${n}:${s}`}function k(n=0,s){if(clearInterval(t),n>0){let e=n;p.textContent=q(e),t=setInterval(()=>{p.textContent=q(--e),e<=0&&(clearInterval(t),alert("Time's up! Submitting your answers."),s&&s())},1e3)}else e=new Date,p.textContent="Time: 00:00",t=setInterval(w,1e3)}function B(){clearInterval(t),t=null}function D(e,t){0===S?v.classList.add("hidden"):v.classList.remove("hidden"),M?(v.disabled=!1,I.disabled=!1,I.textContent="Review Next →",v.textContent="← Review Previous",I.classList.remove("hidden"),v.classList.remove("hidden"),1===N.length?(v.classList.add("hidden"),I.classList.add("hidden")):S===N.length-1?I.classList.add("hidden"):0===S&&v.classList.add("hidden"),E.classList.remove("hidden")):(I.classList.remove("hidden"),v.classList.remove("hidden"),S===N.length-1?I.textContent="Submit Answers":I.textContent="Next →",v.textContent="← Previous",E.classList.add("hidden"))}function $(e){Array.from(L.children).forEach(e=>{e.classList.remove("current")});let t=L.children[e];t&&(t.classList.add("current"),t.scrollIntoView({behavior:"smooth",block:"nearest"}))}function A(e){let t=L.children[e];t&&!M&&(null!==Q[N[e].id]?(t.classList.add("answered"),t.classList.remove("not-answered")):(t.classList.remove("answered"),t.classList.add("not-answered")))}function O(){console.log("UI_STATE: Entering setInitialUIState"),o.classList.remove("hidden"),console.log("UI_STATE: welcomeScreen after remove hidden:",o.className),m.classList.add("hidden"),console.log("UI_STATE: quizLayout after add hidden:",m.className),p.classList.add("hidden"),console.log("UI_STATE: timerDisplay after add hidden:",p.className),f&&(f.classList.remove("hidden"),console.log("UI_STATE: mainElement after remove hidden:",f.className)),l.disabled=!0,l.textContent="Start Quiz",h.innerHTML="",p.textContent="Time: 00:00",L.innerHTML="",a.value=T,d.value=x,u.value=C,"practice"===T?(r.classList.add("hidden"),console.log("UI_STATE: timeLimitGroup after add hidden (practice):",r.className)):(r.classList.remove("hidden"),console.log("UI_STATE: timeLimitGroup after remove hidden (exam):",r.className)),c.textContent=y.length,d.max=y.length,y.length>0?l.disabled=!1:l.disabled=!0,console.log("UI_STATE: Exiting setInitialUIState")}function U(e){E.removeEventListener("click",e),E.addEventListener("click",e)}function b(e){let t=e.target.files[0];if(t){let e=new FileReader;e.onload=e=>{try{let t=JSON.parse(e.target.result);Array.isArray(t)&&t.every(e=>void 0!==e.id&&"string"==typeof e.question&&Array.isArray(e.options)&&e.options.length>0&&"string"==typeof e.answer&&"string"==typeof e.explanation)?(y=t,console.log("Question set loaded successfully:",t),alert(`Successfully loaded ${t.length} questions!`),c.textContent=t.length,d.max=t.length,d.value=Math.min(t.length,parseInt(d.value)),l.disabled=!1):(alert("Error: Invalid JSON format. Please ensure it's an array of question objects with 'id', 'question', 'options', 'answer', and 'explanation'."),y=[],O())}catch(e){alert("Error parsing JSON file. Please ensure it's a valid JSON format."),console.error("Error parsing JSON:",e),y=[],O()}},e.readAsText(t)}}const z=e=>(function(e){if(g.innerHTML="",e<0||e>=N.length)return void console.error("Attempted to display out-of-bounds question index:",e);let t=N[e],n=document.createElement("div");n.className="question",n.dataset.id=t.id;let s=t.options.map(e=>`
        <label>
            <input type="radio"
                    name="question${t.id}"
                    value="${e}"
                    ${Q[t.id]===e?"checked":""}
                    ${M?"disabled":""}>
            ${e}
        </label>
    `).join("");n.innerHTML=`
        <h3>${e+1}: ${t.question}</h3>
        ${s}
        <div class="explanation" id="explanation${t.id}" style="display: ${M?"block":"none"};">
            <p><strong>Explanation:</strong> ${t.explanation}</p>
        </div>
    `,g.appendChild(n),n.querySelectorAll(`input[name="question${t.id}"]`).forEach(e=>{e.addEventListener("change",e=>{var n,s;n=t.id,s=e.target.value,Q[n]=s,console.log(`Answer for Q${t.id} updated: ${e.target.value}`),A(S)})}),M&&function(e){let t=document.querySelectorAll(`#testContainer input[name="question${e.id}"]`),n=Q[e.id];t.forEach(t=>{t.disabled=!0,t.parentElement.classList.remove("correct","incorrect"),t.value===e.answer?t.parentElement.classList.add("correct"):t.value===n&&n!==e.answer&&t.parentElement.classList.add("incorrect")});let s=document.getElementById(`explanation${e.id}`);s&&(s.style.display="block",s.style.color="var(--text-light)")}(t),$(e)})(e),_=()=>(function(){B(),M=!0,N.forEach((e,t)=>{let n=L.children[t];n&&(n.classList.remove("answered","not-answered","current"),Q[e.id]===e.answer?n.classList.add("correct"):n.classList.add("incorrect"))});let e=0,t=0,o=0;N.forEach(n=>{let s=Q[n.id];null===s?o++:s===n.answer?e++:t++});let l=N.length,i=l>0?Math.round(e/l*100):0;h.innerHTML=`
        <h2>Test Results</h2>
        <p>Correct: <span class="correct">${e}</span></p>
        <p>Incorrect: <span class="incorrect">${t}</span></p>
        <p>Unanswered: ${o}</p>
        <p>Score: ${i}%</p>
        <p>${p.textContent}</p>
    `,document.querySelectorAll('.question input[type="radio"]').forEach(e=>{e.disabled=!0}),D(n,s),n(S)})(),Z=()=>void(B(),p.classList.add("hidden"),h.innerHTML="",O());n=z,s=_,i.addEventListener("click",()=>{let e=document.createElement("input");e.type="file",e.accept=".json",e.onchange=b,e.click()}),a.addEventListener("change",e=>{T=e.target.value,O()}),d.addEventListener("change",e=>{let t=parseInt(e.target.value),n=parseInt(d.max);isNaN(t)||t<1?t=1:t>n&&(t=n),d.value=t,x=t}),u.addEventListener("change",e=>{let t=parseInt(e.target.value);(isNaN(t)||t<1)&&(t=1),u.value=t,C=t}),l.addEventListener("click",()=>0===y.length?void alert("Please load a question set first using the 'Add Question Set' button."):d.value>y.length||d.value<=0?void alert(`Please enter a valid number of questions between 1 and ${y.length}.`):void(console.log("Attempting to initialize quiz..."),function(){var e;console.log("QUIZ_INIT: Entered initializeQuiz function."),M=!1,S=0;let t=Math.min(x,y.length),l=[...y].sort(()=>Math.random()-.5).slice(0,t);N=l,Q={},console.log("QUIZ_INIT: Questions shuffled and userAnswers initialized. Shuffled count:",l.length),l.forEach(e=>{var t;t=e.id,Q[t]=null}),console.log("QUIZ_INIT: Attempting UI transition..."),o.classList.add("hidden"),console.log("QUIZ_INIT: welcomeScreen class after add hidden:",o.className),m.classList.remove("hidden"),console.log("QUIZ_INIT: quizLayout class after remove hidden:",m.className),p.classList.remove("hidden"),console.log("QUIZ_INIT: timerDisplay class after remove hidden:",p.className),console.log("QUIZ_INIT: Generating question nav panel..."),e=n,L.innerHTML="",N.forEach((t,n)=>{let s=document.createElement("div");s.classList.add("question-box"),s.textContent=n+1,s.dataset.index=n,null===Q[t.id]?s.classList.add("not-answered"):s.classList.add("answered"),s.addEventListener("click",t=>{let n=parseInt(t.target.dataset.index);n!==S&&(M||A(S),e(S=n),function(e,t){D(e,t)}())}),L.appendChild(s)}),$(S),console.log("QUIZ_INIT: Question nav panel generated."),console.log("QUIZ_INIT: Displaying first question..."),n(S),console.log("QUIZ_INIT: First question displayed."),"exam"===T?k(60*C,s):k(0),console.log("QUIZ_INIT: Timer started."),U(Z),D(n,s),console.log("QUIZ_INIT: Quiz initialized successfully.")}(),console.log("initializeQuiz called."))),v.addEventListener("click",()=>{S>0&&(z(S-=1),D(z,_))}),I.addEventListener("click",()=>{(M||A(S),S<N.length-1)?(z(S+=1),D(z,_)):S!==N.length-1||M||_()}),document.addEventListener("DOMContentLoaded",()=>{O(),U(Z)});
//# sourceMappingURL=public.63c01d66.js.map
