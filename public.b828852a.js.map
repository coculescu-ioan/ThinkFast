{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-5f8a303fe83c6bc6.js","src/js/main.js","src/js/modules/domElements.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","src/js/modules/state.js","src/js/modules/quizLogic.js","src/js/modules/timer.js","src/js/modules/uiHandlers.js","src/js/modules/fileLoader.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SERVER_PORT = 1234;var HMR_SECURE = false;var HMR_ENV_HASH = \"439701173a9199ea\";var HMR_USE_SSE = false;module.bundle.HMR_BUNDLE_ID = \"f3e508fdb828852a\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_SERVER_PORT, HMR_ENV_HASH, HMR_SECURE, HMR_USE_SSE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_SERVER_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var HMR_USE_SSE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */,\n  disposedAssets /*: {|[string]: boolean|} */,\n  assetsToDispose /*: Array<[ParcelRequire, string]> */,\n  assetsToAccept /*: Array<[ParcelRequire, string]> */,\n  bundleNotFound = false;\nfunction getHostname() {\n  return HMR_HOST || (typeof location !== 'undefined' && location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || (typeof location !== 'undefined' ? location.port : HMR_SERVER_PORT);\n}\n\n// eslint-disable-next-line no-redeclare\nlet WebSocket = globalThis.WebSocket;\nif (!WebSocket && typeof module.bundle.root === 'function') {\n  try {\n    // eslint-disable-next-line no-global-assign\n    WebSocket = module.bundle.root('ws');\n  } catch {\n    // ignore.\n  }\n}\nvar hostname = getHostname();\nvar port = getPort();\nvar protocol = HMR_SECURE || typeof location !== 'undefined' && location.protocol === 'https:' && !['localhost', '127.0.0.1', '0.0.0.0'].includes(hostname) ? 'wss' : 'ws';\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif (!parent || !parent.isParcelRequire) {\n  // Web extension context\n  var extCtx = typeof browser === 'undefined' ? typeof chrome === 'undefined' ? null : chrome : browser;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n  var ws;\n  if (HMR_USE_SSE) {\n    ws = new EventSource('/__parcel_hmr');\n  } else {\n    try {\n      // If we're running in the dev server's node runner, listen for messages on the parent port.\n      let {\n        workerData,\n        parentPort\n      } = module.bundle.root('node:worker_threads') /*: any*/;\n      if (workerData !== null && workerData !== void 0 && workerData.__parcel) {\n        parentPort.on('message', async message => {\n          try {\n            await handleMessage(message);\n            parentPort.postMessage('updated');\n          } catch {\n            parentPort.postMessage('restart');\n          }\n        });\n\n        // After the bundle has finished running, notify the dev server that the HMR update is complete.\n        queueMicrotask(() => parentPort.postMessage('ready'));\n      }\n    } catch {\n      if (typeof WebSocket !== 'undefined') {\n        try {\n          ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n        } catch (err) {\n          // Ignore cloudflare workers error.\n          if (err.message && !err.message.includes('Disallowed operation called within global scope')) {\n            console.error(err.message);\n          }\n        }\n      }\n    }\n  }\n  if (ws) {\n    // $FlowFixMe\n    ws.onmessage = async function (event /*: {data: string, ...} */) {\n      var data /*: HMRMessage */ = JSON.parse(event.data);\n      await handleMessage(data);\n    };\n    if (ws instanceof WebSocket) {\n      ws.onerror = function (e) {\n        if (e.message) {\n          console.error(e.message);\n        }\n      };\n      ws.onclose = function () {\n        console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n      };\n    }\n  }\n}\nasync function handleMessage(data /*: HMRMessage */) {\n  checkedAssets = {} /*: {|[string]: boolean|} */;\n  disposedAssets = {} /*: {|[string]: boolean|} */;\n  assetsToAccept = [];\n  assetsToDispose = [];\n  bundleNotFound = false;\n  if (data.type === 'reload') {\n    fullReload();\n  } else if (data.type === 'update') {\n    // Remove error overlay if there is one\n    if (typeof document !== 'undefined') {\n      removeErrorOverlay();\n    }\n    let assets = data.assets;\n\n    // Handle HMR Update\n    let handled = assets.every(asset => {\n      return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n    });\n\n    // Dispatch a custom event in case a bundle was not found. This might mean\n    // an asset on the server changed and we should reload the page. This event\n    // gives the client an opportunity to refresh without losing state\n    // (e.g. via React Server Components). If e.preventDefault() is not called,\n    // we will trigger a full page reload.\n    if (handled && bundleNotFound && assets.some(a => a.envHash !== HMR_ENV_HASH) && typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n      handled = !window.dispatchEvent(new CustomEvent('parcelhmrreload', {\n        cancelable: true\n      }));\n    }\n    if (handled) {\n      console.clear();\n\n      // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n      if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n        window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n      }\n      await hmrApplyUpdates(assets);\n      hmrDisposeQueue();\n\n      // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n      let processedAssets = {};\n      for (let i = 0; i < assetsToAccept.length; i++) {\n        let id = assetsToAccept[i][1];\n        if (!processedAssets[id]) {\n          hmrAccept(assetsToAccept[i][0], id);\n          processedAssets[id] = true;\n        }\n      }\n    } else fullReload();\n  }\n  if (data.type === 'error') {\n    // Log parcel errors to console\n    for (let ansiDiagnostic of data.diagnostics.ansi) {\n      let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n      console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n    }\n    if (typeof document !== 'undefined') {\n      // Render the fancy html overlay\n      removeErrorOverlay();\n      var overlay = createErrorOverlay(data.diagnostics.html);\n      // $FlowFixMe\n      document.body.appendChild(overlay);\n    }\n  }\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"${protocol === 'wss' ? 'https' : 'http'}://${hostname}:${port}/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if (typeof location !== 'undefined' && 'reload' in location) {\n    location.reload();\n  } else if (typeof extCtx !== 'undefined' && extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  } else {\n    try {\n      let {\n        workerData,\n        parentPort\n      } = module.bundle.root('node:worker_threads') /*: any*/;\n      if (workerData !== null && workerData !== void 0 && workerData.__parcel) {\n        parentPort.postMessage('restart');\n      }\n    } catch (err) {\n      console.error('[parcel] ⚠️ An HMR update was not accepted. Please restart the process.');\n    }\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout || typeof document === 'undefined') {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension fix\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n            extCtx.runtime.reload();\n            return;\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    }\n\n    // Always traverse to the parent bundle, even if we already replaced the asset in this bundle.\n    // This is required in case modules are duplicated. We need to ensure all instances have the updated code.\n    if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  checkedAssets = {};\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else if (a !== null) {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      bundleNotFound = true;\n      return true;\n    }\n    return hmrAcceptCheckOne(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return null;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  if (!cached) {\n    return true;\n  }\n  assetsToDispose.push([bundle, id]);\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n  return false;\n}\nfunction hmrDisposeQueue() {\n  // Dispose all old assets.\n  for (let i = 0; i < assetsToDispose.length; i++) {\n    let id = assetsToDispose[i][1];\n    if (!disposedAssets[id]) {\n      hmrDispose(assetsToDispose[i][0], id);\n      disposedAssets[id] = true;\n    }\n  }\n  assetsToDispose = [];\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    let assetsToAlsoAccept = [];\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      let additionalAssets = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (Array.isArray(additionalAssets) && additionalAssets.length) {\n        assetsToAlsoAccept.push(...additionalAssets);\n      }\n    });\n    if (assetsToAlsoAccept.length) {\n      let handled = assetsToAlsoAccept.every(function (a) {\n        return hmrAcceptCheck(a[0], a[1]);\n      });\n      if (!handled) {\n        return fullReload();\n      }\n      hmrDisposeQueue();\n    }\n  }\n}","// src/js/main.js\r\n'use strict';\r\n\r\nimport {\r\n    addQuestionsBtn, startQuizBtn, quizModeSelect, numQuestionsInput, timeLimitInput,\r\n    prevQuestionBtn, nextQuestionBtn\r\n} from './modules/domElements.js';\r\nimport {\r\n    setQuizMode, setNumQuestionsToAsk, setTimeLimitMinutes, setCurrentQuestionIndex,\r\n    currentQuestionIndex, questions, shuffledQuestions, quizEnded,\r\n    updateUserAnswer\r\n} from './modules/state.js';\r\n// Import all quizLogic functions directly\r\nimport * as quizLogic from './modules/quizLogic.js'; // Import all as a namespace\r\nimport * as uiHandlers from './modules/uiHandlers.js'; // Import all as a namespace\r\nimport { handleFileLoad } from './modules/fileLoader.js';\r\n\r\n\r\n// Set up the circular dependencies by passing references\r\n// This must be done BEFORE initializeQuiz or other functions that use these callbacks are called.\r\n// It's crucial that quizLogic gets references to *its own* functions (displayQuestion, checkAnswers, resetQuiz)\r\n// AND uiHandlers functions (updateNavigationButtons, updateQuestionBoxStatus, generateQuestionNavPanel)\r\n// and vice-versa, but via injection through main.js.\r\n\r\n// Here, we define the concrete functions\r\nconst displayQuestionConcrete = (index) => quizLogic.displayQuestion(index);\r\nconst checkAnswersConcrete = () => quizLogic.checkAnswers();\r\nconst resetQuizConcrete = () => quizLogic.resetQuiz();\r\n\r\n// Now, inject these concrete functions into quizLogic and uiHandlers\r\nquizLogic.setCallbacks(displayQuestionConcrete, checkAnswersConcrete, resetQuizConcrete);\r\n\r\n\r\n// --- Event Listeners for UI Controls ---\r\n\r\naddQuestionsBtn.addEventListener('click', () => {\r\n    const input = document.createElement('input');\r\n    input.type = 'file';\r\n    input.accept = '.json';\r\n    input.onchange = handleFileLoad;\r\n    input.click();\r\n});\r\n\r\nquizModeSelect.addEventListener('change', (event) => {\r\n    setQuizMode(event.target.value);\r\n    uiHandlers.setInitialUIState(); // Call through namespace\r\n});\r\n\r\nnumQuestionsInput.addEventListener('change', (event) => {\r\n    let value = parseInt(event.target.value);\r\n    const max = parseInt(numQuestionsInput.max);\r\n\r\n    if (isNaN(value) || value < 1) {\r\n        value = 1;\r\n    } else if (value > max) {\r\n        value = max;\r\n    }\r\n    numQuestionsInput.value = value;\r\n    setNumQuestionsToAsk(value);\r\n});\r\n\r\ntimeLimitInput.addEventListener('change', (event) => {\r\n    let value = parseInt(event.target.value);\r\n    if (isNaN(value) || value < 1) {\r\n        value = 1;\r\n    }\r\n    timeLimitInput.value = value;\r\n    setTimeLimitMinutes(value);\r\n});\r\n\r\nstartQuizBtn.addEventListener('click', () => {\r\n    if (questions.length === 0) {\r\n        alert(\"Please load a question set first using the 'Add Question Set' button.\");\r\n        return;\r\n    }\r\n    if (numQuestionsInput.value > questions.length || numQuestionsInput.value <= 0) {\r\n        alert(`Please enter a valid number of questions between 1 and ${questions.length}.`);\r\n        return;\r\n    }\r\n\r\n    console.log(\"Attempting to initialize quiz...\");\r\n    quizLogic.initializeQuiz(); // Call initializeQuiz from the namespace\r\n    console.log(\"initializeQuiz called.\");\r\n});\r\n\r\nprevQuestionBtn.addEventListener('click', () => {\r\n    if (currentQuestionIndex > 0) {\r\n        setCurrentQuestionIndex(currentQuestionIndex - 1);\r\n        displayQuestionConcrete(currentQuestionIndex); // Use the concrete function\r\n        uiHandlers.updateNavigationButtons(displayQuestionConcrete, checkAnswersConcrete); // Pass callbacks\r\n    }\r\n});\r\n\r\nnextQuestionBtn.addEventListener('click', () => {\r\n    if (!quizEnded) {\r\n        uiHandlers.updateQuestionBoxStatus(currentQuestionIndex); // Call from uiHandlers namespace\r\n    }\r\n\r\n    if (currentQuestionIndex < shuffledQuestions.length - 1) {\r\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n        displayQuestionConcrete(currentQuestionIndex); // Use the concrete function\r\n        uiHandlers.updateNavigationButtons(displayQuestionConcrete, checkAnswersConcrete); // Pass callbacks\r\n    } else if (currentQuestionIndex === shuffledQuestions.length - 1 && !quizEnded) {\r\n        checkAnswersConcrete(); // Use the concrete function\r\n    }\r\n});\r\n\r\n\r\n// --- Initialization ---\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    uiHandlers.setInitialUIState(); // Call through namespace\r\n    uiHandlers.addQuizEventListeners(resetQuizConcrete); // Pass the concrete resetQuiz function\r\n});","// src/js/modules/domElements.js\r\n\r\n// DOM Elements - Welcome Screen\r\nexport const welcomeScreen = document.getElementById('welcomeScreen');\r\nconsole.log('DOM Element Check: welcomeScreen', welcomeScreen); // ADD THIS\r\nexport const startQuizBtn = document.getElementById('startQuizBtn');\r\nconsole.log('DOM Element Check: startQuizBtn', startQuizBtn); // ADD THIS\r\nexport const addQuestionsBtn = document.getElementById('addQuestionsBtn');\r\nconsole.log('DOM Element Check: addQuestionsBtn', addQuestionsBtn); // ADD THIS\r\n\r\nexport const quizModeSelect = document.getElementById('quizMode');\r\nconsole.log('DOM Element Check: quizModeSelect', quizModeSelect); // ADD THIS\r\nexport const numQuestionsInput = document.getElementById('numQuestions');\r\nconsole.log('DOM Element Check: numQuestionsInput', numQuestionsInput); // ADD THIS\r\nexport const maxQuestionsSpan = document.getElementById('maxQuestions');\r\nconsole.log('DOM Element Check: maxQuestionsSpan', maxQuestionsSpan); // ADD THIS\r\nexport const timeLimitGroup = document.getElementById('timeLimitGroup');\r\nconsole.log('DOM Element Check: timeLimitGroup', timeLimitGroup); // ADD THIS\r\nexport const timeLimitInput = document.getElementById('timeLimit');\r\nconsole.log('DOM Element Check: timeLimitInput', timeLimitInput); // ADD THIS\r\n\r\n// DOM Elements - Quiz Layout\r\nexport const quizLayout = document.getElementById('quizLayout');\r\nconsole.log('DOM Element Check: quizLayout', quizLayout); // ADD THIS\r\nexport const testContainer = document.getElementById('testContainer');\r\nconsole.log('DOM Element Check: testContainer', testContainer); // ADD THIS\r\nexport const resultsDiv = document.getElementById('results');\r\nconsole.log('DOM Element Check: resultsDiv', resultsDiv); // ADD THIS\r\nexport const timerDisplay = document.getElementById('timer');\r\nconsole.log('DOM Element Check: timerDisplay', timerDisplay); // ADD THIS\r\n\r\n// DOM Elements - Quiz Content Navigation Buttons\r\nexport const prevQuestionBtn = document.getElementById('prevQuestionBtn');\r\nconsole.log('DOM Element Check: prevQuestionBtn', prevQuestionBtn); // ADD THIS\r\nexport const nextQuestionBtn = document.getElementById('nextQuestionBtn');\r\nconsole.log('DOM Element Check: nextQuestionBtn', nextQuestionBtn); // ADD THIS\r\nexport const resetQuizBtn = document.getElementById('resetQuizBtn');\r\nconsole.log('DOM Element Check: resetQuizBtn', resetQuizBtn); // ADD THIS\r\n\r\n// DOM Elements - Side Panel Navigation\r\nexport const questionNavPanel = document.getElementById('questionNavPanel');\r\nconsole.log('DOM Element Check: questionNavPanel', questionNavPanel); // ADD THIS\r\nexport const questionBoxesContainer = document.getElementById('questionBoxes');\r\nconsole.log('DOM Element Check: questionBoxesContainer', questionBoxesContainer); // ADD THIS\r\n\r\nexport const mainElement = document.querySelector('main');\r\nconsole.log('DOM Element Check: mainElement', mainElement); // ADD THIS","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","// src/js/modules/state.js\r\n\r\nexport let questions = []; // Global variable to store questions loaded from JSON\r\n\r\n// App State for Quiz Settings\r\nexport let quizMode = 'practice'; // 'practice' or 'exam'\r\nexport let numQuestionsToAsk = 10;\r\nexport let timeLimitMinutes = 30; // Only for exam mode\r\nexport let currentQuestionIndex = 0; // Track the currently displayed question\r\n\r\n// App State for Current Quiz Session\r\nexport let shuffledQuestions = [];\r\nexport let userAnswers = {}; // Store answers for all questions (key: question.id, value: selectedOptionValue or null)\r\nexport let startTime;\r\nexport let timerInterval;\r\nexport let quizEnded = false; // Flag to check if quiz has been submitted/ended\r\n\r\n// Functions to update state (important for managing state changes externally)\r\nexport function setQuestions(newQuestions) {\r\n    questions = newQuestions;\r\n}\r\nexport function setQuizMode(mode) {\r\n    quizMode = mode;\r\n}\r\nexport function setNumQuestionsToAsk(num) {\r\n    numQuestionsToAsk = num;\r\n}\r\nexport function setTimeLimitMinutes(minutes) {\r\n    timeLimitMinutes = minutes;\r\n}\r\nexport function setCurrentQuestionIndex(index) {\r\n    currentQuestionIndex = index;\r\n}\r\nexport function setShuffledQuestions(shuffled) {\r\n    shuffledQuestions = shuffled;\r\n}\r\nexport function setUserAnswers(answers) {\r\n    userAnswers = answers;\r\n}\r\nexport function updateUserAnswer(questionId, answer) {\r\n    userAnswers[questionId] = answer;\r\n}\r\nexport function setQuizEnded(ended) {\r\n    quizEnded = ended;\r\n}\r\nexport function setStartTime(time) {\r\n    startTime = time;\r\n}\r\nexport function setTimerInterval(interval) {\r\n    timerInterval = interval;\r\n}\r\n\r\nexport function getStartTime() {\r\n    return startTime;\r\n}\r\nexport function getTimerInterval() {\r\n    return timerInterval;\r\n}","// src/js/modules/quizLogic.js\r\nimport {\r\n    testContainer, resultsDiv, timerDisplay, questionBoxesContainer, welcomeScreen, quizLayout\r\n} from './domElements.js';\r\nimport {\r\n    questions, shuffledQuestions, userAnswers, quizMode, numQuestionsToAsk, timeLimitMinutes, currentQuestionIndex, quizEnded,\r\n    setCurrentQuestionIndex, setShuffledQuestions, setUserAnswers, setQuizEnded, updateUserAnswer\r\n} from './state.js';\r\nimport { startTimer, stopTimer } from './timer.js';\r\nimport {\r\n    generateQuestionNavPanel, updateQuestionNavHighlight, updateQuestionBoxStatus,\r\n    updateNavigationButtons, addQuizEventListeners, setInitialUIState // Import setInitialUIState for resetQuiz\r\n} from './uiHandlers.js';\r\n\r\n// IMPORTANT: Declare these at the module scope so they are available to nested functions\r\n// These will be assigned by the orchestrator (main.js)\r\nlet _displayQuestionCallback;\r\nlet _checkAnswersCallback;\r\nlet _resetQuizCallback;\r\n\r\n// Setter functions to allow main.js to inject the callbacks\r\nexport function setCallbacks(displayQ, checkA, resetQ) {\r\n    _displayQuestionCallback = displayQ;\r\n    _checkAnswersCallback = checkA;\r\n    _resetQuizCallback = resetQ;\r\n}\r\n\r\n/**\r\n * Initializes a new quiz session.\r\n * Resets quiz state, shuffles questions, and sets up the timer.\r\n */\r\nexport function initializeQuiz() {\r\n    console.log(\"QUIZ_INIT: Entered initializeQuiz function.\");\r\n\r\n    setQuizEnded(false);\r\n    setCurrentQuestionIndex(0);\r\n\r\n    const actualNumQuestions = Math.min(numQuestionsToAsk, questions.length);\r\n    const newShuffledQuestions = [...questions].sort(() => Math.random() - 0.5).slice(0, actualNumQuestions);\r\n    setShuffledQuestions(newShuffledQuestions);\r\n    setUserAnswers({});\r\n\r\n    console.log(\"QUIZ_INIT: Questions shuffled and userAnswers initialized. Shuffled count:\", newShuffledQuestions.length);\r\n\r\n    newShuffledQuestions.forEach(q => {\r\n        updateUserAnswer(q.id, null); // Initialize answers to null for all questions\r\n    });\r\n\r\n    // --- UI Transition Calls ---\r\n    console.log(\"QUIZ_INIT: Attempting UI transition...\");\r\n    welcomeScreen.classList.add('hidden'); // This is the key line for welcomeScreen\r\n    console.log('QUIZ_INIT: welcomeScreen class after add hidden:', welcomeScreen.className);\r\n\r\n    quizLayout.classList.remove('hidden'); // This is the key line for quizLayout\r\n    console.log('QUIZ_INIT: quizLayout class after remove hidden:', quizLayout.className);\r\n\r\n    timerDisplay.classList.remove('hidden'); // This is the key line for timerDisplay\r\n    console.log('QUIZ_INIT: timerDisplay class after remove hidden:', timerDisplay.className);\r\n    // --- End UI Transition Calls ---\r\n\r\n    console.log(\"QUIZ_INIT: Generating question nav panel...\");\r\n    generateQuestionNavPanel(_displayQuestionCallback, updateQuestionBoxStatus, _updateNavigationButtons);\r\n    console.log(\"QUIZ_INIT: Question nav panel generated.\");\r\n\r\n    console.log(\"QUIZ_INIT: Displaying first question...\");\r\n    _displayQuestionCallback(currentQuestionIndex); // Use the injected callback here\r\n    console.log(\"QUIZ_INIT: First question displayed.\");\r\n\r\n    if (quizMode === 'exam') {\r\n        startTimer(timeLimitMinutes * 60, _checkAnswersCallback); // <--- MODIFIED: Pass the callback here\r\n    } else {\r\n        startTimer(0); // Practice mode counts up from 0\r\n    }\r\n    console.log(\"QUIZ_INIT: Timer started.\");\r\n\r\n    // Pass the resetQuizCallback to addQuizEventListeners\r\n    addQuizEventListeners(_resetQuizCallback);\r\n    // Call updateNavigationButtons with the correct callbacks\r\n    _updateNavigationButtons(_displayQuestionCallback, _checkAnswersCallback); // Use the injected callbacks here\r\n    console.log(\"QUIZ_INIT: Quiz initialized successfully.\");\r\n}\r\n\r\n/**\r\n * Displays a specific question based on its index. (This function will be passed as a callback)\r\n * @param {number} index - The index of the question to display.\r\n */\r\nexport function displayQuestion(index) {\r\n    testContainer.innerHTML = ''; // Clear previous question content\r\n\r\n    if (index < 0 || index >= shuffledQuestions.length) {\r\n        console.error(\"Attempted to display out-of-bounds question index:\", index);\r\n        return;\r\n    }\r\n\r\n    const q = shuffledQuestions[index];\r\n    const questionDiv = document.createElement('div');\r\n    questionDiv.className = 'question';\r\n    questionDiv.dataset.id = q.id;\r\n\r\n    // Build options, pre-selecting if an answer exists and disabling if quiz has ended\r\n    const optionsHTML = q.options.map(option => `\r\n        <label>\r\n            <input type=\"radio\"\r\n                    name=\"question${q.id}\"\r\n                    value=\"${option}\"\r\n                    ${userAnswers[q.id] === option ? 'checked' : ''}\r\n                    ${quizEnded ? 'disabled' : ''}>\r\n            ${option}\r\n        </label>\r\n    `).join('');\r\n\r\n    const questionHTML = `\r\n        <h3>${index + 1}: ${q.question}</h3>\r\n        ${optionsHTML}\r\n        <div class=\"explanation\" id=\"explanation${q.id}\" style=\"display: ${quizEnded ? 'block' : 'none'};\">\r\n            <p><strong>Explanation:</strong> ${q.explanation}</p>\r\n        </div>\r\n    `;\r\n\r\n    questionDiv.innerHTML = questionHTML;\r\n    testContainer.appendChild(questionDiv);\r\n\r\n    // Add event listeners for radio buttons to update user answers\r\n    const radioButtons = questionDiv.querySelectorAll(`input[name=\"question${q.id}\"]`);\r\n    radioButtons.forEach(radio => {\r\n        radio.addEventListener('change', (event) => {\r\n            updateUserAnswer(q.id, event.target.value);\r\n            console.log(`Answer for Q${q.id} updated: ${event.target.value}`);\r\n            updateQuestionBoxStatus(currentQuestionIndex); // Update side panel box status\r\n        });\r\n    });\r\n\r\n    // Apply immediate feedback styling if the quiz has ended\r\n    if (quizEnded) {\r\n        applyFeedbackStyling(q);\r\n    }\r\n\r\n    updateQuestionNavHighlight(index); // Highlight the current question in the side panel\r\n}\r\n\r\n/**\r\n * Applies correct/incorrect styling and reveals explanations after the quiz ends.\r\n * @param {object} q - The question object to apply feedback for.\r\n */\r\nexport function applyFeedbackStyling(q) {\r\n    const options = document.querySelectorAll(`#testContainer input[name=\"question${q.id}\"]`);\r\n    const userAnswer = userAnswers[q.id];\r\n\r\n    options.forEach(opt => {\r\n        opt.disabled = true; // Ensure all options are disabled for review\r\n\r\n        // Remove previous feedback classes before applying new ones (important for navigation)\r\n        opt.parentElement.classList.remove('correct', 'incorrect');\r\n\r\n        if (opt.value === q.answer) {\r\n            opt.parentElement.classList.add('correct'); // Mark correct answer\r\n        } else if (opt.value === userAnswer && userAnswer !== q.answer) {\r\n            opt.parentElement.classList.add('incorrect'); // Mark user's incorrect answer\r\n        }\r\n    });\r\n\r\n    const explanationDiv = document.getElementById(`explanation${q.id}`);\r\n    if (explanationDiv) {\r\n        explanationDiv.style.display = 'block'; // Show explanation\r\n        explanationDiv.style.color = 'var(--text-light)'; // Ensure readability\r\n    }\r\n}\r\n\r\n/**\r\n * Calculates quiz results and displays them.\r\n * Sets `quizEnded` flag and disables further input.\r\n */\r\nexport function checkAnswers() {\r\n    stopTimer(); // Stop the timer\r\n    setQuizEnded(true); // Mark quiz as ended\r\n\r\n    // Update side panel question boxes with correct/incorrect status\r\n    shuffledQuestions.forEach((q, index) => {\r\n        const questionBox = questionBoxesContainer.children[index];\r\n        if (questionBox) {\r\n            questionBox.classList.remove('answered', 'not-answered', 'current'); // Clean up temporary states\r\n            const userAnswer = userAnswers[q.id];\r\n            if (userAnswer === q.answer) {\r\n                questionBox.classList.add('correct');\r\n            } else {\r\n                questionBox.classList.add('incorrect');\r\n            }\r\n        }\r\n    });\r\n\r\n    // Calculate score\r\n    let correct = 0;\r\n    let incorrect = 0;\r\n    let unanswered = 0;\r\n\r\n    shuffledQuestions.forEach(q => {\r\n        const userAnswer = userAnswers[q.id];\r\n        if (userAnswer === null) {\r\n            unanswered++;\r\n        } else if (userAnswer === q.answer) {\r\n            correct++;\r\n        } else {\r\n            incorrect++;\r\n        }\r\n    });\r\n\r\n    const totalQuestionsAsked = shuffledQuestions.length;\r\n    const percentage = totalQuestionsAsked > 0 ? Math.round((correct / totalQuestionsAsked) * 100) : 0;\r\n\r\n    // Display results\r\n    resultsDiv.innerHTML = `\r\n        <h2>Test Results</h2>\r\n        <p>Correct: <span class=\"correct\">${correct}</span></p>\r\n        <p>Incorrect: <span class=\"incorrect\">${incorrect}</span></p>\r\n        <p>Unanswered: ${unanswered}</p>\r\n        <p>Score: ${percentage}%</p>\r\n        <p>${timerDisplay.textContent}</p>\r\n    `;\r\n\r\n    // Disable all radio inputs in the current question to prevent changes after submission\r\n    document.querySelectorAll('.question input[type=\"radio\"]').forEach(input => {\r\n        input.disabled = true;\r\n    });\r\n\r\n    _updateNavigationButtons(_displayQuestionCallback, _checkAnswersCallback); // Use the injected callbacks here\r\n    _displayQuestionCallback(currentQuestionIndex); // Re-display current question to show feedback\r\n}\r\n\r\n/**\r\n * Resets the quiz state and returns to the welcome screen.\r\n */\r\nexport function resetQuiz() {\r\n    stopTimer();\r\n    timerDisplay.classList.add('hidden');\r\n    resultsDiv.innerHTML = '';\r\n    setInitialUIState(); // Return to welcome screen\r\n}\r\n\r\n// Renamed and exported internal updateNavigationButtons for quizLogic to use\r\nfunction _updateNavigationButtons(displayQuestionCallback, checkAnswersCallback) {\r\n    updateNavigationButtons(displayQuestionCallback, checkAnswersCallback);\r\n}","// src/js/modules/timer.js\r\nimport { timerDisplay } from './domElements.js';\r\nimport { quizMode, setTimerInterval, setStartTime, getTimerInterval, getStartTime } from './state.js';\r\n// REMOVE THIS LINE: import { checkAnswers } from './quizLogic.js';\r\n\r\n/**\r\n * Formats a total number of seconds into a MM:SS string.\r\n * @param {number} totalSeconds - The total number of seconds.\r\n * @returns {string} Formatted time string (MM:SS).\r\n */\r\nfunction formatTime(totalSeconds) {\r\n    if (totalSeconds < 0) totalSeconds = 0;\r\n    const minutes = Math.floor(totalSeconds / 60).toString().padStart(2, '0');\r\n    const seconds = (totalSeconds % 60).toString().padStart(2, '0');\r\n    return `Time: ${minutes}:${seconds}`;\r\n}\r\n\r\n/**\r\n * Updates the timer display for practice mode (counts up).\r\n */\r\nfunction updatePracticeTimer() {\r\n    const now = new Date();\r\n    const elapsed = new Date(now - getStartTime());\r\n    const minutes = elapsed.getMinutes().toString().padStart(2, '0');\r\n    const seconds = elapsed.getSeconds().toString().padStart(2, '0');\r\n    timerDisplay.textContent = `Time: ${minutes}:${seconds}`;\r\n}\r\n\r\n/**\r\n * Starts or resets the quiz timer based on quiz mode.\r\n * @param {number} limitSeconds - The time limit in seconds for exam mode, 0 for practice mode.\r\n * @param {Function} checkAnswersCallback - Callback function to call when time runs out in exam mode. // <--- ADD THIS PARAMETER\r\n */\r\nexport function startTimer(limitSeconds = 0, checkAnswersCallback) { // <--- ADD checkAnswersCallback PARAMETER\r\n    clearInterval(getTimerInterval()); // Clear any existing timer\r\n\r\n    if (limitSeconds > 0) { // Exam mode: countdown\r\n        let remainingSeconds = limitSeconds;\r\n        timerDisplay.textContent = formatTime(remainingSeconds);\r\n\r\n        const interval = setInterval(() => {\r\n            remainingSeconds--;\r\n            timerDisplay.textContent = formatTime(remainingSeconds);\r\n\r\n            if (remainingSeconds <= 0) {\r\n                clearInterval(getTimerInterval());\r\n                alert(\"Time's up! Submitting your answers.\");\r\n                if (checkAnswersCallback) { // <--- CALL THE CALLBACK\r\n                    checkAnswersCallback();\r\n                }\r\n            }\r\n        }, 1000);\r\n        setTimerInterval(interval);\r\n    } else { // Practice mode: count up\r\n        setStartTime(new Date());\r\n        timerDisplay.textContent = 'Time: 00:00';\r\n        const interval = setInterval(updatePracticeTimer, 1000);\r\n        setTimerInterval(interval);\r\n    }\r\n}\r\n\r\nexport function stopTimer() {\r\n    clearInterval(getTimerInterval());\r\n    setTimerInterval(null); // Clear the interval ID\r\n}","// src/js/modules/uiHandlers.js\r\nimport {\r\n    prevQuestionBtn, nextQuestionBtn, resetQuizBtn,\r\n    questionBoxesContainer, testContainer, resultsDiv, timerDisplay,\r\n    welcomeScreen, quizLayout,\r\n    startQuizBtn, quizModeSelect, numQuestionsInput, maxQuestionsSpan, timeLimitGroup, timeLimitInput,\r\n    mainElement\r\n} from './domElements.js';\r\nimport {\r\n    questions, shuffledQuestions, userAnswers,\r\n    quizMode, numQuestionsToAsk, timeLimitMinutes, currentQuestionIndex, quizEnded,\r\n    setQuizMode, setNumQuestionsToAsk, setTimeLimitMinutes, setCurrentQuestionIndex, setQuizEnded\r\n} from './state.js';\r\n\r\n/**\r\n * Updates the visibility and text of navigation buttons based on current quiz state.\r\n * @param {Function} displayQuestionCallback - Callback to display a question.\r\n * @param {Function} checkAnswersCallback - Callback to check answers.\r\n */\r\nexport function updateNavigationButtons(displayQuestionCallback, checkAnswersCallback) {\r\n    // Show/hide previous button based on current question index\r\n    if (currentQuestionIndex === 0) {\r\n        prevQuestionBtn.classList.add('hidden');\r\n    } else {\r\n        prevQuestionBtn.classList.remove('hidden');\r\n    }\r\n\r\n    // Determine text and visibility of next/submit button\r\n    if (quizEnded) {\r\n        // If quiz has ended, all questions are for review\r\n        prevQuestionBtn.disabled = false;\r\n        nextQuestionBtn.disabled = false;\r\n        nextQuestionBtn.textContent = 'Review Next \\u2192';\r\n        prevQuestionBtn.textContent = '\\u2190 Review Previous';\r\n        nextQuestionBtn.classList.remove('hidden'); // Ensure it's visible for review\r\n        prevQuestionBtn.classList.remove('hidden'); // Ensure it's visible for review\r\n\r\n\r\n        // Hide navigation buttons if only one question or at the ends of review\r\n        if (shuffledQuestions.length === 1) {\r\n            prevQuestionBtn.classList.add('hidden');\r\n            nextQuestionBtn.classList.add('hidden');\r\n        } else if (currentQuestionIndex === shuffledQuestions.length - 1) {\r\n            nextQuestionBtn.classList.add('hidden'); // Hide 'next' if at last question in review\r\n        } else if (currentQuestionIndex === 0) {\r\n            prevQuestionBtn.classList.add('hidden'); // Hide 'previous' if at first question in review\r\n        }\r\n\r\n        resetQuizBtn.classList.remove('hidden'); // Always show reset button after quiz ends\r\n    } else {\r\n        // If quiz is ongoing\r\n        nextQuestionBtn.classList.remove('hidden'); // Ensure it's visible for an active quiz\r\n        prevQuestionBtn.classList.remove('hidden'); // Ensure it's visible for an active quiz\r\n\r\n        if (currentQuestionIndex === shuffledQuestions.length - 1) {\r\n            nextQuestionBtn.textContent = 'Submit Answers';\r\n        } else {\r\n            nextQuestionBtn.textContent = 'Next \\u2192';\r\n        }\r\n        prevQuestionBtn.textContent = '\\u2190 Previous';\r\n\r\n        resetQuizBtn.classList.add('hidden'); // Hide reset button during quiz\r\n    }\r\n}\r\n\r\n/**\r\n * Generates the clickable question boxes in the side navigation panel.\r\n * @param {Function} displayQuestionCallback - Callback to display a question.\r\n * @param {Function} updateQuestionBoxStatusCallback - Callback to update question box status.\r\n * @param {Function} updateNavigationButtonsCallback - Callback to update navigation buttons.\r\n */\r\nexport function generateQuestionNavPanel(displayQuestionCallback, updateQuestionBoxStatusCallback, updateNavigationButtonsCallback) {\r\n    questionBoxesContainer.innerHTML = ''; // Clear previous boxes\r\n    shuffledQuestions.forEach((q, index) => {\r\n        const questionBox = document.createElement('div');\r\n        questionBox.classList.add('question-box');\r\n        questionBox.textContent = index + 1; // Display 1-based index\r\n        questionBox.dataset.index = index; // Store 0-based index for easy access\r\n\r\n        // Set initial answered/not-answered status\r\n        if (userAnswers[q.id] === null) {\r\n            questionBox.classList.add('not-answered');\r\n        } else {\r\n            questionBox.classList.add('answered');\r\n        }\r\n\r\n        // Add click listener for direct question navigation\r\n        questionBox.addEventListener('click', (event) => {\r\n            const clickedIndex = parseInt(event.target.dataset.index);\r\n            if (clickedIndex !== currentQuestionIndex) {\r\n                // If quiz is ongoing, update status of the *previous* current question\r\n                if (!quizEnded) {\r\n                    updateQuestionBoxStatusCallback(currentQuestionIndex);\r\n                }\r\n                setCurrentQuestionIndex(clickedIndex);\r\n                displayQuestionCallback(currentQuestionIndex);\r\n                updateNavigationButtonsCallback();\r\n            }\r\n        });\r\n        questionBoxesContainer.appendChild(questionBox);\r\n    });\r\n    updateQuestionNavHighlight(currentQuestionIndex); // Highlight the first question initially\r\n}\r\n\r\n/**\r\n * Updates the 'current' highlight on the question navigation panel.\r\n * @param {number} newIndex - The index of the question to highlight.\r\n */\r\nexport function updateQuestionNavHighlight(newIndex) {\r\n    // Remove 'current' class from all boxes\r\n    Array.from(questionBoxesContainer.children).forEach((box) => {\r\n        box.classList.remove('current');\r\n    });\r\n    // Add 'current' class to the new current question box\r\n    const currentBox = questionBoxesContainer.children[newIndex];\r\n    if (currentBox) {\r\n        currentBox.classList.add('current');\r\n        // Scroll the current box into view if it's outside the scrollable area\r\n        currentBox.scrollIntoView({ behavior: 'smooth', block: 'nearest' });\r\n    }\r\n}\r\n\r\n/**\r\n * Updates the 'answered' or 'not-answered' status of a question box in the side panel.\r\n * @param {number} indexToUpdate - The index of the question box to update.\r\n */\r\nexport function updateQuestionBoxStatus(indexToUpdate) {\r\n    const questionBox = questionBoxesContainer.children[indexToUpdate];\r\n    if (questionBox && !quizEnded) { // Only update answered/not-answered if quiz isn't ended\r\n        const qId = shuffledQuestions[indexToUpdate].id;\r\n        if (userAnswers[qId] !== null) {\r\n            questionBox.classList.add('answered');\r\n            questionBox.classList.remove('not-answered');\r\n        } else {\r\n            questionBox.classList.remove('answered');\r\n            questionBox.classList.add('not-answered');\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Sets the initial UI state, displaying the welcome screen.\r\n */\r\nexport function setInitialUIState() {\r\n    console.log('UI_STATE: Entering setInitialUIState');\r\n\r\n    welcomeScreen.classList.remove('hidden');\r\n    console.log('UI_STATE: welcomeScreen after remove hidden:', welcomeScreen.className);\r\n\r\n    quizLayout.classList.add('hidden');\r\n    console.log('UI_STATE: quizLayout after add hidden:', quizLayout.className);\r\n\r\n    timerDisplay.classList.add('hidden');\r\n    console.log('UI_STATE: timerDisplay after add hidden:', timerDisplay.className);\r\n\r\n    if (mainElement) {\r\n        mainElement.classList.remove('hidden');\r\n        console.log('UI_STATE: mainElement after remove hidden:', mainElement.className);\r\n    }\r\n\r\n    startQuizBtn.disabled = true; // Disabled until questions are loaded\r\n    startQuizBtn.textContent = 'Start Quiz';\r\n    resultsDiv.innerHTML = ''; // Clear results display\r\n    timerDisplay.textContent = 'Time: 00:00'; // Reset timer display\r\n    questionBoxesContainer.innerHTML = ''; // Clear side panel question boxes\r\n\r\n    // Reset settings inputs to current app state values\r\n    quizModeSelect.value = quizMode;\r\n    numQuestionsInput.value = numQuestionsToAsk;\r\n    timeLimitInput.value = timeLimitMinutes;\r\n\r\n    // Toggle time limit input visibility based on quiz mode\r\n    if (quizMode === 'practice') {\r\n        timeLimitGroup.classList.add('hidden');\r\n        console.log('UI_STATE: timeLimitGroup after add hidden (practice):', timeLimitGroup.className);\r\n    } else {\r\n        timeLimitGroup.classList.remove('hidden');\r\n        console.log('UI_STATE: timeLimitGroup after remove hidden (exam):', timeLimitGroup.className);\r\n    }\r\n\r\n    // Update max questions span and input max attribute\r\n    maxQuestionsSpan.textContent = questions.length;\r\n    numQuestionsInput.max = questions.length;\r\n\r\n    // Enable start quiz button if questions are loaded\r\n    if (questions.length > 0) {\r\n        startQuizBtn.disabled = false;\r\n    } else {\r\n        startQuizBtn.disabled = true;\r\n    }\r\n    console.log('UI_STATE: Exiting setInitialUIState');\r\n}\r\n\r\n/**\r\n * Adds or re-adds primary quiz-wide event listeners.\r\n * Used at quiz initialization to ensure they are active.\r\n * @param {Function} resetQuizCallback - Callback to reset the quiz.\r\n */\r\nexport function addQuizEventListeners(resetQuizCallback) {\r\n    resetQuizBtn.removeEventListener('click', resetQuizCallback); // Remove to prevent multiple listeners\r\n    resetQuizBtn.addEventListener('click', resetQuizCallback);\r\n}","// src/js/modules/fileLoader.js\r\nimport { setQuestions } from './state.js';\r\nimport { maxQuestionsSpan, numQuestionsInput, startQuizBtn } from './domElements.js';\r\nimport { setInitialUIState } from './uiHandlers.js';\r\n\r\nexport function handleFileLoad(e) {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n        const reader = new FileReader();\r\n        reader.onload = (event) => {\r\n            try {\r\n                const loadedData = JSON.parse(event.target.result);\r\n                // Basic validation for loaded JSON structure\r\n                if (Array.isArray(loadedData) && loadedData.every(q =>\r\n                    q.id !== undefined && typeof q.question === 'string' &&\r\n                    Array.isArray(q.options) && q.options.length > 0 &&\r\n                    typeof q.answer === 'string' && typeof q.explanation === 'string'\r\n                )) {\r\n                    setQuestions(loadedData);\r\n                    console.log(\"Question set loaded successfully:\", loadedData);\r\n                    alert(`Successfully loaded ${loadedData.length} questions!`);\r\n\r\n                    // Update settings and enable start button\r\n                    maxQuestionsSpan.textContent = loadedData.length;\r\n                    numQuestionsInput.max = loadedData.length;\r\n                    numQuestionsInput.value = Math.min(loadedData.length, parseInt(numQuestionsInput.value)); // Adjust input value if it exceeds new max\r\n\r\n                    startQuizBtn.disabled = false;\r\n                } else {\r\n                    alert(\"Error: Invalid JSON format. Please ensure it's an array of question objects with 'id', 'question', 'options', 'answer', and 'explanation'.\");\r\n                    setQuestions([]); // Clear questions on invalid format\r\n                    setInitialUIState(); // Reset UI state to reflect no questions loaded\r\n                }\r\n            } catch (error) {\r\n                alert(\"Error parsing JSON file. Please ensure it's a valid JSON format.\");\r\n                console.error(\"Error parsing JSON:\", error);\r\n                setQuestions([]); // Clear questions on parsing error\r\n                setInitialUIState(); // Reset UI state to reflect no questions loaded\r\n            }\r\n        };\r\n        reader.readAsText(file);\r\n    }\r\n}"],"names":[],"version":3,"file":"public.b828852a.js.map","sourceRoot":"/__parcel_source_root/"}